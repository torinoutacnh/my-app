{"version":3,"file":"static/js/126.f2cf57cd.chunk.js","mappings":"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","sources":["../node_modules/@ledgerhq/devices/src/hid-framing.ts","../node_modules/@ledgerhq/devices/node_modules/semver/classes/comparator.js","../node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js","../node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/clean.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/cmp.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/coerce.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-build.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-loose.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/diff.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/eq.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/gt.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/gte.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/inc.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/lt.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/lte.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/major.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/minor.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/neq.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/patch.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/prerelease.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/rcompare.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/rsort.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/satisfies.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/sort.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/valid.js","../node_modules/@ledgerhq/devices/node_modules/semver/index.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/constants.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/debug.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/identifiers.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/parse-options.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/re.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/gtr.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/intersects.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/ltr.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/max-satisfying.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-satisfying.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-version.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/outside.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/simplify.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/subset.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/to-comparators.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/valid.js","../node_modules/@ledgerhq/devices/src/index.ts","../node_modules/@ledgerhq/logs/src/index.ts","../node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts","../node_modules/lru-cache/index.js","../node_modules/yallist/iterator.js","../node_modules/yallist/yallist.js"],"sourcesContent":["import { TransportError } from \"@ledgerhq/errors\";\nexport type ResponseAcc =\n  | {\n      data: Buffer;\n      dataLength: number;\n      sequence: number;\n    }\n  | null\n  | undefined;\nconst Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  const b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nconst initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0,\n};\n\n/**\n *\n */\nconst createHIDframing = (channel: number, packetSize: number) => {\n  return {\n    makeBlocks(apdu: Buffer): Buffer[] {\n      let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      const blockSize = packetSize - 5;\n      const nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([\n        data, // fill data with padding\n        Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0),\n      ]);\n      const blocks: Buffer[] = [];\n\n      for (let i = 0; i < nbBlocks; i++) {\n        const head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n\n      return blocks;\n    },\n\n    reduceResponse(acc: ResponseAcc, chunk: Buffer): ResponseAcc {\n      let { data, dataLength, sequence } = acc || initialAcc;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n\n      sequence++;\n      const chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data,\n        dataLength,\n        sequence,\n      };\n    },\n\n    getReducedResult(acc: ResponseAcc): Buffer | null | undefined {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    },\n  };\n};\n\nexport default createHIDframing;\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst {re, t} = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split(/\\s*\\|\\|\\s*/)\n      // map the range to a 2d array of comparators\n      .map(range => this.parseRange(range.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0)\n        this.set = [first]\n      else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached)\n      return cached\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n      // in loose mode, throw out any that are not valid comparators\n      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)\n      .map(comp => new Comparator(comp, this.options))\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const l = rangeList.length\n    const rangeMap = new Map()\n    for (const comp of rangeList) {\n      if (isNullSet(comp))\n        return [comp]\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has(''))\n      rangeMap.delete('')\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceTilde(comp, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceCaret(comp, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((comp) => {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<')\n        pr = '-0'\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst {re, t} = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null)\n    return null\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(version, options).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const {MAX_LENGTH} = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers\n}\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((options, k) => {\n    options[k] = true\n    return options\n  }, {})\nmodule.exports = parseOptions\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin)))\n      minver = setMin\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst {ANY} = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let min = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!min)\n        min = version\n    } else {\n      if (prev) {\n        set.push([min, prev])\n      }\n      prev = null\n      min = null\n    }\n  }\n  if (min)\n    set.push([min, null])\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max)\n      ranges.push(min)\n    else if (!max && min === v[0])\n      ranges.push('*')\n    else if (!max)\n      ranges.push(`>=${min}`)\n    else if (min === v[0])\n      ranges.push(`<=${max}`)\n    else\n      ranges.push(`${min} - ${max}`)\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom)\n    return true\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub)\n        continue OUTER\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull)\n      return false\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom)\n    return true\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY)\n      return true\n    else if (options.includePrerelease)\n      sub = [ new Comparator('>=0.0.0-0') ]\n    else\n      sub = [ new Comparator('>=0.0.0') ]\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease)\n      return true\n    else\n      dom = [ new Comparator('>=0.0.0') ]\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=')\n      gt = higherGT(gt, c, options)\n    else if (c.operator === '<' || c.operator === '<=')\n      lt = lowerLT(lt, c, options)\n    else\n      eqSet.add(c.semver)\n  }\n\n  if (eqSet.size > 1)\n    return null\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0)\n      return null\n    else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<='))\n      return null\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options))\n      return null\n\n    if (lt && !satisfies(eq, String(lt), options))\n      return null\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options))\n        return false\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt)\n          return false\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options))\n        return false\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt)\n          return false\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options))\n        return false\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0)\n      return false\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0)\n    return false\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0)\n    return false\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre)\n    return false\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","import semver from \"semver\";\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\n\nexport enum DeviceModelId {\n  blue = \"blue\",\n  nanoS = \"nanoS\",\n  nanoSP = \"nanoSP\",\n  nanoX = \"nanoX\",\n}\n\nconst devices: { [key in DeviceModelId]: DeviceModel } = {\n  [DeviceModelId.blue]: {\n    id: DeviceModelId.blue,\n    productName: \"Ledger Blue\",\n    productIdMM: 0x00,\n    legacyUsbProductId: 0x0000,\n    usbOnly: true,\n    memorySize: 480 * 1024,\n    masks: [0x31000000, 0x31010000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n  },\n  [DeviceModelId.nanoS]: {\n    id: DeviceModelId.nanoS,\n    productName: \"Ledger Nano S\",\n    productIdMM: 0x10,\n    legacyUsbProductId: 0x0001,\n    usbOnly: true,\n    memorySize: 320 * 1024,\n    masks: [0x31100000],\n    getBlockSize: (firmwareVersion: string): number =>\n      semver.lt(semver.coerce(firmwareVersion) ?? \"\", \"2.0.0\")\n        ? 4 * 1024\n        : 2 * 1024,\n  },\n  [DeviceModelId.nanoSP]: {\n    id: DeviceModelId.nanoSP,\n    productName: \"Ledger Nano SP\",\n    productIdMM: 0x50,\n    legacyUsbProductId: 0x0005,\n    usbOnly: true,\n    memorySize: 1533 * 1024,\n    masks: [0x33100000],\n    getBlockSize: (_firmwareVersion: string): number => 32,\n  },\n  [DeviceModelId.nanoX]: {\n    id: DeviceModelId.nanoX,\n    productName: \"Ledger Nano X\",\n    productIdMM: 0x40,\n    legacyUsbProductId: 0x0004,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024,\n    masks: [0x33000000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        // this is the legacy one (prototype version). we will eventually drop it.\n        serviceUuid: \"d973f2e0-b19e-11e2-9e96-0800200c9a66\",\n        notifyUuid: \"d973f2e1-b19e-11e2-9e96-0800200c9a66\",\n        writeUuid: \"d973f2e2-b19e-11e2-9e96-0800200c9a66\",\n        writeCmdUuid: \"d973f2e3-b19e-11e2-9e96-0800200c9a66\",\n      },\n      {\n        serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\",\n      },\n    ],\n  },\n};\n\nconst productMap = {\n  Blue: DeviceModelId.blue,\n  \"Nano S\": DeviceModelId.nanoS,\n  \"Nano X\": DeviceModelId.nanoX,\n};\n\nconst devicesList: DeviceModel[] = Object.values(devices);\n\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n\n/**\n *\n */\nexport const getDeviceModel = (id: DeviceModelId): DeviceModel => {\n  const info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\nexport const identifyTargetId = (\n  targetId: number\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find(({ masks }) =>\n    masks.find((mask) => (targetId & 0xffff0000) === mask)\n  );\n\n  return deviceModel;\n};\n\n/**\n *\n */\nexport const identifyUSBProductId = (\n  usbProductId: number\n): DeviceModel | null | undefined => {\n  const legacy = devicesList.find((d) => d.legacyUsbProductId === usbProductId);\n  if (legacy) return legacy;\n  const mm = usbProductId >> 8;\n  const deviceModel = devicesList.find((d) => d.productIdMM === mm);\n  return deviceModel;\n};\n\nexport const identifyProductName = (\n  productName: string\n): DeviceModel | null | undefined => {\n  let productId = productMap[productName];\n  if (!productId && productName.startsWith(\"Nano S\")) {\n    productId = DeviceModelId.nanoSP;\n  }\n  const deviceModel = devicesList.find((d) => d.id === productId);\n  return deviceModel;\n};\n\nconst bluetoothServices: string[] = [];\nconst serviceUuidToInfos: Record<string, BluetoothInfos> = {};\n\nfor (const id in devices) {\n  const deviceModel = devices[id];\n  const { bluetoothSpec } = deviceModel;\n\n  if (bluetoothSpec) {\n    for (let i = 0; i < bluetoothSpec.length; i++) {\n      const spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[\n        spec.serviceUuid.replace(/-/g, \"\")\n      ] = {\n        deviceModel,\n        ...spec,\n      };\n    }\n  }\n}\n\n/**\n *\n */\nexport const getBluetoothServiceUuids = (): string[] => bluetoothServices;\n\n/**\n *\n */\nexport const getInfosForServiceUuid = (\n  uuid: string\n): BluetoothInfos | undefined => serviceUuidToInfos[uuid.toLowerCase()];\n\n/**\n *\n */\nexport interface DeviceModel {\n  id: DeviceModelId;\n  productName: string;\n  productIdMM: number;\n  legacyUsbProductId: number;\n  usbOnly: boolean;\n  memorySize: number;\n  masks: number[];\n  // blockSize: number, // THIS FIELD IS DEPRECATED, use getBlockSize\n  getBlockSize: (firmwareVersion: string) => number;\n  bluetoothSpec?: {\n    serviceUuid: string;\n    writeUuid: string;\n    writeCmdUuid: string;\n    notifyUuid: string;\n  }[];\n}\n\n/**\n *\n */\nexport interface BluetoothInfos {\n  deviceModel: DeviceModel;\n  serviceUuid: string;\n  writeUuid: string;\n  writeCmdUuid: string;\n  notifyUuid: string;\n}\n","/**\n * A Log object\n */\nexport interface Log {\n  type: string;\n  message?: string;\n  data?: any;\n  // unique amount all logs\n  id: string;\n  // date of the log\n  date: Date;\n}\nexport type Unsubscribe = () => void;\nexport type Subscriber = (arg0: Log) => void;\nlet id = 0;\nconst subscribers: Subscriber[] = [];\n\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: string, message?: string, data?: any) => {\n  const obj: Log = {\n    type,\n    id: String(++id),\n    date: new Date(),\n  };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: Subscriber): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\n\ndeclare global {\n  interface Window {\n    __ledgerLogsListen: any;\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n","import Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n  TransportError,\n} from \"@ledgerhq/errors\";\n\nconst ledgerDevices = [\n  {\n    vendorId: ledgerUSBVendorId,\n  },\n];\n\nconst isSupported = () =>\n  Promise.resolve(!!(window.navigator && window.navigator.hid));\n\nconst getHID = (): HID => {\n  // $FlowFixMe\n  const { hid } = navigator;\n  if (!hid)\n    throw new TransportError(\n      \"navigator.hid is not supported\",\n      \"HIDNotSupported\"\n    );\n  return hid;\n};\n\nasync function requestLedgerDevices(): Promise<HIDDevice[]> {\n  const device = await getHID().requestDevice({\n    filters: ledgerDevices,\n  });\n  if (Array.isArray(device)) return device;\n  return [device];\n}\n\nasync function getLedgerDevices(): Promise<HIDDevice[]> {\n  const devices = await getHID().getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nasync function getFirstLedgerDevice(): Promise<HIDDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  const devices = await requestLedgerDevices();\n  return devices[0];\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\n\nexport default class TransportWebHID extends Transport {\n  device: HIDDevice;\n  deviceModel: DeviceModel | null | undefined;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n\n  constructor(device: HIDDevice) {\n    super();\n    this.device = device;\n    this.deviceModel =\n      typeof device.productId === \"number\"\n        ? identifyUSBProductId(device.productId)\n        : undefined;\n    device.addEventListener(\"inputreport\", this.onInputReport);\n  }\n\n  inputs: Buffer[] = [];\n  inputCallback: ((arg0: Buffer) => void) | null | undefined;\n  read = (): Promise<Buffer> => {\n    if (this.inputs.length) {\n      return Promise.resolve((this.inputs.shift() as unknown) as Buffer);\n    }\n\n    return new Promise((success) => {\n      this.inputCallback = success;\n    });\n  };\n  onInputReport = (e: HIDInputReportEvent) => {\n    const buffer = Buffer.from(e.data.buffer);\n\n    if (this.inputCallback) {\n      this.inputCallback(buffer);\n      this.inputCallback = null;\n    } else {\n      this.inputs.push(buffer);\n    }\n  };\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<HIDDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!device) {\n          observer.error(\n            new TransportOpenUserCancelled(\"Access denied to use Ledger device\")\n          );\n        } else if (!unsubscribed) {\n          const deviceModel =\n            typeof device.productId === \"number\"\n              ? identifyUSBProductId(device.productId)\n              : undefined;\n          observer.next({\n            type: \"add\",\n            descriptor: device,\n            deviceModel,\n          });\n          observer.complete();\n        }\n      },\n      (error) => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      }\n    );\n\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n\n    return {\n      unsubscribe,\n    };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const [device] = await requestLedgerDevices();\n    return TransportWebHID.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebHID.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n  static async open(device: HIDDevice) {\n    await device.open();\n    const transport = new TransportWebHID(device);\n\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        getHID().removeEventListener(\"disconnect\", onDisconnect);\n\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n\n    getHID().addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    this.device.removeEventListener(\"inputreport\", this.onInputReport);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = async (apdu: Buffer): Promise<Buffer> => {\n    const b = await this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n      const framing = hidFraming(channel, packetSize);\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.sendReport(0, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n\n      while (!(result = framing.getReducedResult(acc))) {\n        const buffer = await this.read();\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"write\")) {\n        this._emitDisconnect(e);\n\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n\n      throw e;\n    });\n    return b as Buffer;\n  };\n\n  setScrambleKey() {}\n}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n"],"names":["asUInt16BE","value","b","Buffer","alloc","writeUInt16BE","initialAcc","data","dataLength","sequence","channel","packetSize","makeBlocks","apdu","concat","length","blockSize","nbBlocks","Math","ceil","fill","blocks","i","head","writeUInt8","chunk","slice","push","reduceResponse","acc","readUInt16BE","TransportError","readUInt8","chunkData","getReducedResult","ANY","Symbol","Comparator","comp","options","parseOptions","loose","debug","this","parse","semver","operator","version","r","re","t","COMPARATORLOOSE","COMPARATOR","m","match","TypeError","undefined","SemVer","er","cmp","includePrerelease","Range","test","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","module","exports","require","range","raw","set","format","split","map","parseRange","trim","filter","c","first","isNullSet","isAny","comps","join","memoOpts","Object","keys","memoKey","cached","cache","get","hr","HYPHENRANGELOOSE","HYPHENRANGE","replace","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","compRe","rangeList","parseComparator","replaceGTE0","rangeMap","Map","size","has","delete","result","values","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","intersects","testSet","max","comparators","remainingComparators","testComparator","pop","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","id","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","num","build","other","compareMain","comparePre","a","release","identifier","inc","isNaN","Error","s","eq","neq","gt","gte","lt","lte","op","String","rtl","next","COERCERTL","exec","index","lastIndex","COERCE","versionA","versionB","compare","compareBuild","version1","version2","v1","v2","hasPre","prefix","defaultResult","key","parsed","list","sort","v","internalRe","src","tokens","SEMVER_SPEC_VERSION","rcompareIdentifiers","valid","clean","diff","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","Number","MAX_SAFE_COMPONENT_LENGTH","process","NODE_DEBUG","args","console","error","numeric","anum","bnum","opts","k","reduce","R","createToken","name","isGlobal","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","LONETILDE","LONECARET","r1","r2","versions","maxSV","rangeObj","forEach","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","prev","ranges","simplified","original","simpleSubset","sub","dom","gtltComp","eqSet","Set","higherGT","lowerLT","add","higher","lower","hasDomLT","hasDomGT","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","DeviceModelId","devices","blue","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","masks","getBlockSize","_firwareVersion","nanoS","firmwareVersion","nanoSP","_firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","writeCmdUuid","devicesList","identifyUSBProductId","usbProductId","legacy","find","d","mm","bluetoothServices","serviceUuidToInfos","deviceModel","spec","subscribers","log","type","message","obj","date","Date","e","dispatch","window","__ledgerLogsListen","cb","indexOf","ledgerDevices","vendorId","isSupported","Promise","resolve","navigator","hid","getHID","requestLedgerDevices","requestDevice","filters","device","Array","isArray","getLedgerDevices","getDevices","floor","random","inputs","read","shift","success","inputCallback","onInputReport","buffer","_disconnectEmitted","_emitDisconnect","emit","exchange","exchangeAtomicImpl","toString","framing","sendReport","includes","DisconnectedDeviceDuringOperation","productId","addEventListener","request","TransportWebHID","open","openConnected","transport","removeEventListener","DisconnectedDevice","close","exchangeBusyPromise","setScrambleKey","listen","observer","unsubscribed","existingDevices","getFirstLedgerDevice","then","descriptor","complete","TransportOpenUserCancelled","unsubscribe","Transport","Yallist","MAX","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","LRUCache","Infinity","lc","stale","maxAge","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lC","hit","fn","thisp","walker","tail","forEachStep","toArray","isStale","now","h","len","del","item","Entry","unshift","node","arr","l","expiresAt","self","doUse","unshiftNode","removeNode","call","prototype","iterator","arguments","insert","inserted","Node","create","pushNode","res","forEachReverse","n","getReverse","mapReverse","initial","reduceReverse","toArrayReverse","sliceReverse","splice","start","deleteCount","reverse"],"sourceRoot":""}